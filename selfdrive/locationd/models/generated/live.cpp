#include "live.h"

namespace {
#define DIM 22
#define EDIM 21
#define MEDIM 21
typedef void (*Hfun)(double *, double *, double *);
const static double MAHA_THRESH_4 = 7.814727903251177;
const static double MAHA_THRESH_9 = 7.814727903251177;
const static double MAHA_THRESH_10 = 7.814727903251177;
const static double MAHA_THRESH_12 = 7.814727903251177;
const static double MAHA_THRESH_35 = 7.814727903251177;
const static double MAHA_THRESH_32 = 9.487729036781154;
const static double MAHA_THRESH_13 = 7.814727903251177;
const static double MAHA_THRESH_14 = 7.814727903251177;
const static double MAHA_THRESH_33 = 7.814727903251177;

/******************************************************************************
 *                       Code generated with SymPy 1.12                       *
 *                                                                            *
 *              See http://www.sympy.org/ for more information.               *
 *                                                                            *
 *                         This file is part of 'ekf'                         *
 ******************************************************************************/
void H(double *in_vec, double *out_882580126896942295) {
   out_882580126896942295[0] = 0;
   out_882580126896942295[1] = -sin(in_vec[1])*sin(in_vec[2])*in_vec[4] - sin(in_vec[1])*cos(in_vec[2])*in_vec[3] - cos(in_vec[1])*in_vec[5];
   out_882580126896942295[2] = -sin(in_vec[2])*cos(in_vec[1])*in_vec[3] + cos(in_vec[1])*cos(in_vec[2])*in_vec[4];
   out_882580126896942295[3] = cos(in_vec[1])*cos(in_vec[2]);
   out_882580126896942295[4] = sin(in_vec[2])*cos(in_vec[1]);
   out_882580126896942295[5] = -sin(in_vec[1]);
   out_882580126896942295[6] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (-sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_882580126896942295[7] = -sin(in_vec[0])*sin(in_vec[1])*in_vec[5] + sin(in_vec[0])*sin(in_vec[2])*cos(in_vec[1])*in_vec[4] + sin(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_882580126896942295[8] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]))*in_vec[4];
   out_882580126896942295[9] = sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]);
   out_882580126896942295[10] = sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) + cos(in_vec[0])*cos(in_vec[2]);
   out_882580126896942295[11] = sin(in_vec[0])*cos(in_vec[1]);
   out_882580126896942295[12] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (-sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) + sin(in_vec[2])*cos(in_vec[0]))*in_vec[3] - sin(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_882580126896942295[13] = -sin(in_vec[1])*cos(in_vec[0])*in_vec[5] + sin(in_vec[2])*cos(in_vec[0])*cos(in_vec[1])*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_882580126896942295[14] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (sin(in_vec[0])*cos(in_vec[2]) - sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[3];
   out_882580126896942295[15] = sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]);
   out_882580126896942295[16] = -sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]);
   out_882580126896942295[17] = cos(in_vec[0])*cos(in_vec[1]);
}
void err_fun(double *nom_x, double *delta_x, double *out_5996174494959834025) {
   out_5996174494959834025[0] = delta_x[0] + nom_x[0];
   out_5996174494959834025[1] = delta_x[1] + nom_x[1];
   out_5996174494959834025[2] = delta_x[2] + nom_x[2];
   out_5996174494959834025[3] = -0.5*delta_x[3]*nom_x[4] - 0.5*delta_x[4]*nom_x[5] - 0.5*delta_x[5]*nom_x[6] + 1.0*nom_x[3];
   out_5996174494959834025[4] = 0.5*delta_x[3]*nom_x[3] + 0.5*delta_x[4]*nom_x[6] - 0.5*delta_x[5]*nom_x[5] + 1.0*nom_x[4];
   out_5996174494959834025[5] = -0.5*delta_x[3]*nom_x[6] + 0.5*delta_x[4]*nom_x[3] + 0.5*delta_x[5]*nom_x[4] + 1.0*nom_x[5];
   out_5996174494959834025[6] = 0.5*delta_x[3]*nom_x[5] - 0.5*delta_x[4]*nom_x[4] + 0.5*delta_x[5]*nom_x[3] + 1.0*nom_x[6];
   out_5996174494959834025[7] = delta_x[6] + nom_x[7];
   out_5996174494959834025[8] = delta_x[7] + nom_x[8];
   out_5996174494959834025[9] = delta_x[8] + nom_x[9];
   out_5996174494959834025[10] = delta_x[9] + nom_x[10];
   out_5996174494959834025[11] = delta_x[10] + nom_x[11];
   out_5996174494959834025[12] = delta_x[11] + nom_x[12];
   out_5996174494959834025[13] = delta_x[12] + nom_x[13];
   out_5996174494959834025[14] = delta_x[13] + nom_x[14];
   out_5996174494959834025[15] = delta_x[14] + nom_x[15];
   out_5996174494959834025[16] = delta_x[15] + nom_x[16];
   out_5996174494959834025[17] = delta_x[16] + nom_x[17];
   out_5996174494959834025[18] = delta_x[17] + nom_x[18];
   out_5996174494959834025[19] = delta_x[18] + nom_x[19];
   out_5996174494959834025[20] = delta_x[19] + nom_x[20];
   out_5996174494959834025[21] = delta_x[20] + nom_x[21];
}
void inv_err_fun(double *nom_x, double *true_x, double *out_6459459844882907304) {
   out_6459459844882907304[0] = -nom_x[0] + true_x[0];
   out_6459459844882907304[1] = -nom_x[1] + true_x[1];
   out_6459459844882907304[2] = -nom_x[2] + true_x[2];
   out_6459459844882907304[3] = 2*nom_x[3]*true_x[4] - 2*nom_x[4]*true_x[3] + 2*nom_x[5]*true_x[6] - 2*nom_x[6]*true_x[5];
   out_6459459844882907304[4] = 2*nom_x[3]*true_x[5] - 2*nom_x[4]*true_x[6] - 2*nom_x[5]*true_x[3] + 2*nom_x[6]*true_x[4];
   out_6459459844882907304[5] = 2*nom_x[3]*true_x[6] + 2*nom_x[4]*true_x[5] - 2*nom_x[5]*true_x[4] - 2*nom_x[6]*true_x[3];
   out_6459459844882907304[6] = -nom_x[7] + true_x[7];
   out_6459459844882907304[7] = -nom_x[8] + true_x[8];
   out_6459459844882907304[8] = -nom_x[9] + true_x[9];
   out_6459459844882907304[9] = -nom_x[10] + true_x[10];
   out_6459459844882907304[10] = -nom_x[11] + true_x[11];
   out_6459459844882907304[11] = -nom_x[12] + true_x[12];
   out_6459459844882907304[12] = -nom_x[13] + true_x[13];
   out_6459459844882907304[13] = -nom_x[14] + true_x[14];
   out_6459459844882907304[14] = -nom_x[15] + true_x[15];
   out_6459459844882907304[15] = -nom_x[16] + true_x[16];
   out_6459459844882907304[16] = -nom_x[17] + true_x[17];
   out_6459459844882907304[17] = -nom_x[18] + true_x[18];
   out_6459459844882907304[18] = -nom_x[19] + true_x[19];
   out_6459459844882907304[19] = -nom_x[20] + true_x[20];
   out_6459459844882907304[20] = -nom_x[21] + true_x[21];
}
void H_mod_fun(double *state, double *out_8080057036640925045) {
   out_8080057036640925045[0] = 1.0;
   out_8080057036640925045[1] = 0;
   out_8080057036640925045[2] = 0;
   out_8080057036640925045[3] = 0;
   out_8080057036640925045[4] = 0;
   out_8080057036640925045[5] = 0;
   out_8080057036640925045[6] = 0;
   out_8080057036640925045[7] = 0;
   out_8080057036640925045[8] = 0;
   out_8080057036640925045[9] = 0;
   out_8080057036640925045[10] = 0;
   out_8080057036640925045[11] = 0;
   out_8080057036640925045[12] = 0;
   out_8080057036640925045[13] = 0;
   out_8080057036640925045[14] = 0;
   out_8080057036640925045[15] = 0;
   out_8080057036640925045[16] = 0;
   out_8080057036640925045[17] = 0;
   out_8080057036640925045[18] = 0;
   out_8080057036640925045[19] = 0;
   out_8080057036640925045[20] = 0;
   out_8080057036640925045[21] = 0;
   out_8080057036640925045[22] = 1.0;
   out_8080057036640925045[23] = 0;
   out_8080057036640925045[24] = 0;
   out_8080057036640925045[25] = 0;
   out_8080057036640925045[26] = 0;
   out_8080057036640925045[27] = 0;
   out_8080057036640925045[28] = 0;
   out_8080057036640925045[29] = 0;
   out_8080057036640925045[30] = 0;
   out_8080057036640925045[31] = 0;
   out_8080057036640925045[32] = 0;
   out_8080057036640925045[33] = 0;
   out_8080057036640925045[34] = 0;
   out_8080057036640925045[35] = 0;
   out_8080057036640925045[36] = 0;
   out_8080057036640925045[37] = 0;
   out_8080057036640925045[38] = 0;
   out_8080057036640925045[39] = 0;
   out_8080057036640925045[40] = 0;
   out_8080057036640925045[41] = 0;
   out_8080057036640925045[42] = 0;
   out_8080057036640925045[43] = 0;
   out_8080057036640925045[44] = 1.0;
   out_8080057036640925045[45] = 0;
   out_8080057036640925045[46] = 0;
   out_8080057036640925045[47] = 0;
   out_8080057036640925045[48] = 0;
   out_8080057036640925045[49] = 0;
   out_8080057036640925045[50] = 0;
   out_8080057036640925045[51] = 0;
   out_8080057036640925045[52] = 0;
   out_8080057036640925045[53] = 0;
   out_8080057036640925045[54] = 0;
   out_8080057036640925045[55] = 0;
   out_8080057036640925045[56] = 0;
   out_8080057036640925045[57] = 0;
   out_8080057036640925045[58] = 0;
   out_8080057036640925045[59] = 0;
   out_8080057036640925045[60] = 0;
   out_8080057036640925045[61] = 0;
   out_8080057036640925045[62] = 0;
   out_8080057036640925045[63] = 0;
   out_8080057036640925045[64] = 0;
   out_8080057036640925045[65] = 0;
   out_8080057036640925045[66] = -0.5*state[4];
   out_8080057036640925045[67] = -0.5*state[5];
   out_8080057036640925045[68] = -0.5*state[6];
   out_8080057036640925045[69] = 0;
   out_8080057036640925045[70] = 0;
   out_8080057036640925045[71] = 0;
   out_8080057036640925045[72] = 0;
   out_8080057036640925045[73] = 0;
   out_8080057036640925045[74] = 0;
   out_8080057036640925045[75] = 0;
   out_8080057036640925045[76] = 0;
   out_8080057036640925045[77] = 0;
   out_8080057036640925045[78] = 0;
   out_8080057036640925045[79] = 0;
   out_8080057036640925045[80] = 0;
   out_8080057036640925045[81] = 0;
   out_8080057036640925045[82] = 0;
   out_8080057036640925045[83] = 0;
   out_8080057036640925045[84] = 0;
   out_8080057036640925045[85] = 0;
   out_8080057036640925045[86] = 0;
   out_8080057036640925045[87] = 0.5*state[3];
   out_8080057036640925045[88] = 0.5*state[6];
   out_8080057036640925045[89] = -0.5*state[5];
   out_8080057036640925045[90] = 0;
   out_8080057036640925045[91] = 0;
   out_8080057036640925045[92] = 0;
   out_8080057036640925045[93] = 0;
   out_8080057036640925045[94] = 0;
   out_8080057036640925045[95] = 0;
   out_8080057036640925045[96] = 0;
   out_8080057036640925045[97] = 0;
   out_8080057036640925045[98] = 0;
   out_8080057036640925045[99] = 0;
   out_8080057036640925045[100] = 0;
   out_8080057036640925045[101] = 0;
   out_8080057036640925045[102] = 0;
   out_8080057036640925045[103] = 0;
   out_8080057036640925045[104] = 0;
   out_8080057036640925045[105] = 0;
   out_8080057036640925045[106] = 0;
   out_8080057036640925045[107] = 0;
   out_8080057036640925045[108] = -0.5*state[6];
   out_8080057036640925045[109] = 0.5*state[3];
   out_8080057036640925045[110] = 0.5*state[4];
   out_8080057036640925045[111] = 0;
   out_8080057036640925045[112] = 0;
   out_8080057036640925045[113] = 0;
   out_8080057036640925045[114] = 0;
   out_8080057036640925045[115] = 0;
   out_8080057036640925045[116] = 0;
   out_8080057036640925045[117] = 0;
   out_8080057036640925045[118] = 0;
   out_8080057036640925045[119] = 0;
   out_8080057036640925045[120] = 0;
   out_8080057036640925045[121] = 0;
   out_8080057036640925045[122] = 0;
   out_8080057036640925045[123] = 0;
   out_8080057036640925045[124] = 0;
   out_8080057036640925045[125] = 0;
   out_8080057036640925045[126] = 0;
   out_8080057036640925045[127] = 0;
   out_8080057036640925045[128] = 0;
   out_8080057036640925045[129] = 0.5*state[5];
   out_8080057036640925045[130] = -0.5*state[4];
   out_8080057036640925045[131] = 0.5*state[3];
   out_8080057036640925045[132] = 0;
   out_8080057036640925045[133] = 0;
   out_8080057036640925045[134] = 0;
   out_8080057036640925045[135] = 0;
   out_8080057036640925045[136] = 0;
   out_8080057036640925045[137] = 0;
   out_8080057036640925045[138] = 0;
   out_8080057036640925045[139] = 0;
   out_8080057036640925045[140] = 0;
   out_8080057036640925045[141] = 0;
   out_8080057036640925045[142] = 0;
   out_8080057036640925045[143] = 0;
   out_8080057036640925045[144] = 0;
   out_8080057036640925045[145] = 0;
   out_8080057036640925045[146] = 0;
   out_8080057036640925045[147] = 0;
   out_8080057036640925045[148] = 0;
   out_8080057036640925045[149] = 0;
   out_8080057036640925045[150] = 0;
   out_8080057036640925045[151] = 0;
   out_8080057036640925045[152] = 0;
   out_8080057036640925045[153] = 1.0;
   out_8080057036640925045[154] = 0;
   out_8080057036640925045[155] = 0;
   out_8080057036640925045[156] = 0;
   out_8080057036640925045[157] = 0;
   out_8080057036640925045[158] = 0;
   out_8080057036640925045[159] = 0;
   out_8080057036640925045[160] = 0;
   out_8080057036640925045[161] = 0;
   out_8080057036640925045[162] = 0;
   out_8080057036640925045[163] = 0;
   out_8080057036640925045[164] = 0;
   out_8080057036640925045[165] = 0;
   out_8080057036640925045[166] = 0;
   out_8080057036640925045[167] = 0;
   out_8080057036640925045[168] = 0;
   out_8080057036640925045[169] = 0;
   out_8080057036640925045[170] = 0;
   out_8080057036640925045[171] = 0;
   out_8080057036640925045[172] = 0;
   out_8080057036640925045[173] = 0;
   out_8080057036640925045[174] = 0;
   out_8080057036640925045[175] = 1.0;
   out_8080057036640925045[176] = 0;
   out_8080057036640925045[177] = 0;
   out_8080057036640925045[178] = 0;
   out_8080057036640925045[179] = 0;
   out_8080057036640925045[180] = 0;
   out_8080057036640925045[181] = 0;
   out_8080057036640925045[182] = 0;
   out_8080057036640925045[183] = 0;
   out_8080057036640925045[184] = 0;
   out_8080057036640925045[185] = 0;
   out_8080057036640925045[186] = 0;
   out_8080057036640925045[187] = 0;
   out_8080057036640925045[188] = 0;
   out_8080057036640925045[189] = 0;
   out_8080057036640925045[190] = 0;
   out_8080057036640925045[191] = 0;
   out_8080057036640925045[192] = 0;
   out_8080057036640925045[193] = 0;
   out_8080057036640925045[194] = 0;
   out_8080057036640925045[195] = 0;
   out_8080057036640925045[196] = 0;
   out_8080057036640925045[197] = 1.0;
   out_8080057036640925045[198] = 0;
   out_8080057036640925045[199] = 0;
   out_8080057036640925045[200] = 0;
   out_8080057036640925045[201] = 0;
   out_8080057036640925045[202] = 0;
   out_8080057036640925045[203] = 0;
   out_8080057036640925045[204] = 0;
   out_8080057036640925045[205] = 0;
   out_8080057036640925045[206] = 0;
   out_8080057036640925045[207] = 0;
   out_8080057036640925045[208] = 0;
   out_8080057036640925045[209] = 0;
   out_8080057036640925045[210] = 0;
   out_8080057036640925045[211] = 0;
   out_8080057036640925045[212] = 0;
   out_8080057036640925045[213] = 0;
   out_8080057036640925045[214] = 0;
   out_8080057036640925045[215] = 0;
   out_8080057036640925045[216] = 0;
   out_8080057036640925045[217] = 0;
   out_8080057036640925045[218] = 0;
   out_8080057036640925045[219] = 1.0;
   out_8080057036640925045[220] = 0;
   out_8080057036640925045[221] = 0;
   out_8080057036640925045[222] = 0;
   out_8080057036640925045[223] = 0;
   out_8080057036640925045[224] = 0;
   out_8080057036640925045[225] = 0;
   out_8080057036640925045[226] = 0;
   out_8080057036640925045[227] = 0;
   out_8080057036640925045[228] = 0;
   out_8080057036640925045[229] = 0;
   out_8080057036640925045[230] = 0;
   out_8080057036640925045[231] = 0;
   out_8080057036640925045[232] = 0;
   out_8080057036640925045[233] = 0;
   out_8080057036640925045[234] = 0;
   out_8080057036640925045[235] = 0;
   out_8080057036640925045[236] = 0;
   out_8080057036640925045[237] = 0;
   out_8080057036640925045[238] = 0;
   out_8080057036640925045[239] = 0;
   out_8080057036640925045[240] = 0;
   out_8080057036640925045[241] = 1.0;
   out_8080057036640925045[242] = 0;
   out_8080057036640925045[243] = 0;
   out_8080057036640925045[244] = 0;
   out_8080057036640925045[245] = 0;
   out_8080057036640925045[246] = 0;
   out_8080057036640925045[247] = 0;
   out_8080057036640925045[248] = 0;
   out_8080057036640925045[249] = 0;
   out_8080057036640925045[250] = 0;
   out_8080057036640925045[251] = 0;
   out_8080057036640925045[252] = 0;
   out_8080057036640925045[253] = 0;
   out_8080057036640925045[254] = 0;
   out_8080057036640925045[255] = 0;
   out_8080057036640925045[256] = 0;
   out_8080057036640925045[257] = 0;
   out_8080057036640925045[258] = 0;
   out_8080057036640925045[259] = 0;
   out_8080057036640925045[260] = 0;
   out_8080057036640925045[261] = 0;
   out_8080057036640925045[262] = 0;
   out_8080057036640925045[263] = 1.0;
   out_8080057036640925045[264] = 0;
   out_8080057036640925045[265] = 0;
   out_8080057036640925045[266] = 0;
   out_8080057036640925045[267] = 0;
   out_8080057036640925045[268] = 0;
   out_8080057036640925045[269] = 0;
   out_8080057036640925045[270] = 0;
   out_8080057036640925045[271] = 0;
   out_8080057036640925045[272] = 0;
   out_8080057036640925045[273] = 0;
   out_8080057036640925045[274] = 0;
   out_8080057036640925045[275] = 0;
   out_8080057036640925045[276] = 0;
   out_8080057036640925045[277] = 0;
   out_8080057036640925045[278] = 0;
   out_8080057036640925045[279] = 0;
   out_8080057036640925045[280] = 0;
   out_8080057036640925045[281] = 0;
   out_8080057036640925045[282] = 0;
   out_8080057036640925045[283] = 0;
   out_8080057036640925045[284] = 0;
   out_8080057036640925045[285] = 1.0;
   out_8080057036640925045[286] = 0;
   out_8080057036640925045[287] = 0;
   out_8080057036640925045[288] = 0;
   out_8080057036640925045[289] = 0;
   out_8080057036640925045[290] = 0;
   out_8080057036640925045[291] = 0;
   out_8080057036640925045[292] = 0;
   out_8080057036640925045[293] = 0;
   out_8080057036640925045[294] = 0;
   out_8080057036640925045[295] = 0;
   out_8080057036640925045[296] = 0;
   out_8080057036640925045[297] = 0;
   out_8080057036640925045[298] = 0;
   out_8080057036640925045[299] = 0;
   out_8080057036640925045[300] = 0;
   out_8080057036640925045[301] = 0;
   out_8080057036640925045[302] = 0;
   out_8080057036640925045[303] = 0;
   out_8080057036640925045[304] = 0;
   out_8080057036640925045[305] = 0;
   out_8080057036640925045[306] = 0;
   out_8080057036640925045[307] = 1.0;
   out_8080057036640925045[308] = 0;
   out_8080057036640925045[309] = 0;
   out_8080057036640925045[310] = 0;
   out_8080057036640925045[311] = 0;
   out_8080057036640925045[312] = 0;
   out_8080057036640925045[313] = 0;
   out_8080057036640925045[314] = 0;
   out_8080057036640925045[315] = 0;
   out_8080057036640925045[316] = 0;
   out_8080057036640925045[317] = 0;
   out_8080057036640925045[318] = 0;
   out_8080057036640925045[319] = 0;
   out_8080057036640925045[320] = 0;
   out_8080057036640925045[321] = 0;
   out_8080057036640925045[322] = 0;
   out_8080057036640925045[323] = 0;
   out_8080057036640925045[324] = 0;
   out_8080057036640925045[325] = 0;
   out_8080057036640925045[326] = 0;
   out_8080057036640925045[327] = 0;
   out_8080057036640925045[328] = 0;
   out_8080057036640925045[329] = 1.0;
   out_8080057036640925045[330] = 0;
   out_8080057036640925045[331] = 0;
   out_8080057036640925045[332] = 0;
   out_8080057036640925045[333] = 0;
   out_8080057036640925045[334] = 0;
   out_8080057036640925045[335] = 0;
   out_8080057036640925045[336] = 0;
   out_8080057036640925045[337] = 0;
   out_8080057036640925045[338] = 0;
   out_8080057036640925045[339] = 0;
   out_8080057036640925045[340] = 0;
   out_8080057036640925045[341] = 0;
   out_8080057036640925045[342] = 0;
   out_8080057036640925045[343] = 0;
   out_8080057036640925045[344] = 0;
   out_8080057036640925045[345] = 0;
   out_8080057036640925045[346] = 0;
   out_8080057036640925045[347] = 0;
   out_8080057036640925045[348] = 0;
   out_8080057036640925045[349] = 0;
   out_8080057036640925045[350] = 0;
   out_8080057036640925045[351] = 1.0;
   out_8080057036640925045[352] = 0;
   out_8080057036640925045[353] = 0;
   out_8080057036640925045[354] = 0;
   out_8080057036640925045[355] = 0;
   out_8080057036640925045[356] = 0;
   out_8080057036640925045[357] = 0;
   out_8080057036640925045[358] = 0;
   out_8080057036640925045[359] = 0;
   out_8080057036640925045[360] = 0;
   out_8080057036640925045[361] = 0;
   out_8080057036640925045[362] = 0;
   out_8080057036640925045[363] = 0;
   out_8080057036640925045[364] = 0;
   out_8080057036640925045[365] = 0;
   out_8080057036640925045[366] = 0;
   out_8080057036640925045[367] = 0;
   out_8080057036640925045[368] = 0;
   out_8080057036640925045[369] = 0;
   out_8080057036640925045[370] = 0;
   out_8080057036640925045[371] = 0;
   out_8080057036640925045[372] = 0;
   out_8080057036640925045[373] = 1.0;
   out_8080057036640925045[374] = 0;
   out_8080057036640925045[375] = 0;
   out_8080057036640925045[376] = 0;
   out_8080057036640925045[377] = 0;
   out_8080057036640925045[378] = 0;
   out_8080057036640925045[379] = 0;
   out_8080057036640925045[380] = 0;
   out_8080057036640925045[381] = 0;
   out_8080057036640925045[382] = 0;
   out_8080057036640925045[383] = 0;
   out_8080057036640925045[384] = 0;
   out_8080057036640925045[385] = 0;
   out_8080057036640925045[386] = 0;
   out_8080057036640925045[387] = 0;
   out_8080057036640925045[388] = 0;
   out_8080057036640925045[389] = 0;
   out_8080057036640925045[390] = 0;
   out_8080057036640925045[391] = 0;
   out_8080057036640925045[392] = 0;
   out_8080057036640925045[393] = 0;
   out_8080057036640925045[394] = 0;
   out_8080057036640925045[395] = 1.0;
   out_8080057036640925045[396] = 0;
   out_8080057036640925045[397] = 0;
   out_8080057036640925045[398] = 0;
   out_8080057036640925045[399] = 0;
   out_8080057036640925045[400] = 0;
   out_8080057036640925045[401] = 0;
   out_8080057036640925045[402] = 0;
   out_8080057036640925045[403] = 0;
   out_8080057036640925045[404] = 0;
   out_8080057036640925045[405] = 0;
   out_8080057036640925045[406] = 0;
   out_8080057036640925045[407] = 0;
   out_8080057036640925045[408] = 0;
   out_8080057036640925045[409] = 0;
   out_8080057036640925045[410] = 0;
   out_8080057036640925045[411] = 0;
   out_8080057036640925045[412] = 0;
   out_8080057036640925045[413] = 0;
   out_8080057036640925045[414] = 0;
   out_8080057036640925045[415] = 0;
   out_8080057036640925045[416] = 0;
   out_8080057036640925045[417] = 1.0;
   out_8080057036640925045[418] = 0;
   out_8080057036640925045[419] = 0;
   out_8080057036640925045[420] = 0;
   out_8080057036640925045[421] = 0;
   out_8080057036640925045[422] = 0;
   out_8080057036640925045[423] = 0;
   out_8080057036640925045[424] = 0;
   out_8080057036640925045[425] = 0;
   out_8080057036640925045[426] = 0;
   out_8080057036640925045[427] = 0;
   out_8080057036640925045[428] = 0;
   out_8080057036640925045[429] = 0;
   out_8080057036640925045[430] = 0;
   out_8080057036640925045[431] = 0;
   out_8080057036640925045[432] = 0;
   out_8080057036640925045[433] = 0;
   out_8080057036640925045[434] = 0;
   out_8080057036640925045[435] = 0;
   out_8080057036640925045[436] = 0;
   out_8080057036640925045[437] = 0;
   out_8080057036640925045[438] = 0;
   out_8080057036640925045[439] = 1.0;
   out_8080057036640925045[440] = 0;
   out_8080057036640925045[441] = 0;
   out_8080057036640925045[442] = 0;
   out_8080057036640925045[443] = 0;
   out_8080057036640925045[444] = 0;
   out_8080057036640925045[445] = 0;
   out_8080057036640925045[446] = 0;
   out_8080057036640925045[447] = 0;
   out_8080057036640925045[448] = 0;
   out_8080057036640925045[449] = 0;
   out_8080057036640925045[450] = 0;
   out_8080057036640925045[451] = 0;
   out_8080057036640925045[452] = 0;
   out_8080057036640925045[453] = 0;
   out_8080057036640925045[454] = 0;
   out_8080057036640925045[455] = 0;
   out_8080057036640925045[456] = 0;
   out_8080057036640925045[457] = 0;
   out_8080057036640925045[458] = 0;
   out_8080057036640925045[459] = 0;
   out_8080057036640925045[460] = 0;
   out_8080057036640925045[461] = 1.0;
}
void f_fun(double *state, double dt, double *out_5988242100613668006) {
   out_5988242100613668006[0] = dt*state[7] + state[0];
   out_5988242100613668006[1] = dt*state[8] + state[1];
   out_5988242100613668006[2] = dt*state[9] + state[2];
   out_5988242100613668006[3] = dt*(-0.5*state[4]*state[10] - 0.5*state[5]*state[11] - 0.5*state[6]*state[12]) + state[3];
   out_5988242100613668006[4] = dt*(0.5*state[3]*state[10] + 0.5*state[5]*state[12] - 0.5*state[6]*state[11]) + state[4];
   out_5988242100613668006[5] = dt*(0.5*state[3]*state[11] - 0.5*state[4]*state[12] + 0.5*state[6]*state[10]) + state[5];
   out_5988242100613668006[6] = dt*(0.5*state[3]*state[12] + 0.5*state[4]*state[11] - 0.5*state[5]*state[10]) + state[6];
   out_5988242100613668006[7] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]) + state[7];
   out_5988242100613668006[8] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]) + state[8];
   out_5988242100613668006[9] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]) + state[9];
   out_5988242100613668006[10] = state[10];
   out_5988242100613668006[11] = state[11];
   out_5988242100613668006[12] = state[12];
   out_5988242100613668006[13] = state[13];
   out_5988242100613668006[14] = state[14];
   out_5988242100613668006[15] = state[15];
   out_5988242100613668006[16] = state[16];
   out_5988242100613668006[17] = state[17];
   out_5988242100613668006[18] = state[18];
   out_5988242100613668006[19] = state[19];
   out_5988242100613668006[20] = state[20];
   out_5988242100613668006[21] = state[21];
}
void F_fun(double *state, double dt, double *out_4629418675209333035) {
   out_4629418675209333035[0] = 1;
   out_4629418675209333035[1] = 0;
   out_4629418675209333035[2] = 0;
   out_4629418675209333035[3] = 0;
   out_4629418675209333035[4] = 0;
   out_4629418675209333035[5] = 0;
   out_4629418675209333035[6] = dt;
   out_4629418675209333035[7] = 0;
   out_4629418675209333035[8] = 0;
   out_4629418675209333035[9] = 0;
   out_4629418675209333035[10] = 0;
   out_4629418675209333035[11] = 0;
   out_4629418675209333035[12] = 0;
   out_4629418675209333035[13] = 0;
   out_4629418675209333035[14] = 0;
   out_4629418675209333035[15] = 0;
   out_4629418675209333035[16] = 0;
   out_4629418675209333035[17] = 0;
   out_4629418675209333035[18] = 0;
   out_4629418675209333035[19] = 0;
   out_4629418675209333035[20] = 0;
   out_4629418675209333035[21] = 0;
   out_4629418675209333035[22] = 1;
   out_4629418675209333035[23] = 0;
   out_4629418675209333035[24] = 0;
   out_4629418675209333035[25] = 0;
   out_4629418675209333035[26] = 0;
   out_4629418675209333035[27] = 0;
   out_4629418675209333035[28] = dt;
   out_4629418675209333035[29] = 0;
   out_4629418675209333035[30] = 0;
   out_4629418675209333035[31] = 0;
   out_4629418675209333035[32] = 0;
   out_4629418675209333035[33] = 0;
   out_4629418675209333035[34] = 0;
   out_4629418675209333035[35] = 0;
   out_4629418675209333035[36] = 0;
   out_4629418675209333035[37] = 0;
   out_4629418675209333035[38] = 0;
   out_4629418675209333035[39] = 0;
   out_4629418675209333035[40] = 0;
   out_4629418675209333035[41] = 0;
   out_4629418675209333035[42] = 0;
   out_4629418675209333035[43] = 0;
   out_4629418675209333035[44] = 1;
   out_4629418675209333035[45] = 0;
   out_4629418675209333035[46] = 0;
   out_4629418675209333035[47] = 0;
   out_4629418675209333035[48] = 0;
   out_4629418675209333035[49] = 0;
   out_4629418675209333035[50] = dt;
   out_4629418675209333035[51] = 0;
   out_4629418675209333035[52] = 0;
   out_4629418675209333035[53] = 0;
   out_4629418675209333035[54] = 0;
   out_4629418675209333035[55] = 0;
   out_4629418675209333035[56] = 0;
   out_4629418675209333035[57] = 0;
   out_4629418675209333035[58] = 0;
   out_4629418675209333035[59] = 0;
   out_4629418675209333035[60] = 0;
   out_4629418675209333035[61] = 0;
   out_4629418675209333035[62] = 0;
   out_4629418675209333035[63] = 0;
   out_4629418675209333035[64] = 0;
   out_4629418675209333035[65] = 0;
   out_4629418675209333035[66] = 1;
   out_4629418675209333035[67] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[11] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_4629418675209333035[68] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[12] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[10] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[11]);
   out_4629418675209333035[69] = 0;
   out_4629418675209333035[70] = 0;
   out_4629418675209333035[71] = 0;
   out_4629418675209333035[72] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_4629418675209333035[73] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_4629418675209333035[74] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_4629418675209333035[75] = 0;
   out_4629418675209333035[76] = 0;
   out_4629418675209333035[77] = 0;
   out_4629418675209333035[78] = 0;
   out_4629418675209333035[79] = 0;
   out_4629418675209333035[80] = 0;
   out_4629418675209333035[81] = 0;
   out_4629418675209333035[82] = 0;
   out_4629418675209333035[83] = 0;
   out_4629418675209333035[84] = 0;
   out_4629418675209333035[85] = 0;
   out_4629418675209333035[86] = 0;
   out_4629418675209333035[87] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[11] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_4629418675209333035[88] = 1;
   out_4629418675209333035[89] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[12] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[11] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[10]);
   out_4629418675209333035[90] = 0;
   out_4629418675209333035[91] = 0;
   out_4629418675209333035[92] = 0;
   out_4629418675209333035[93] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_4629418675209333035[94] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_4629418675209333035[95] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_4629418675209333035[96] = 0;
   out_4629418675209333035[97] = 0;
   out_4629418675209333035[98] = 0;
   out_4629418675209333035[99] = 0;
   out_4629418675209333035[100] = 0;
   out_4629418675209333035[101] = 0;
   out_4629418675209333035[102] = 0;
   out_4629418675209333035[103] = 0;
   out_4629418675209333035[104] = 0;
   out_4629418675209333035[105] = 0;
   out_4629418675209333035[106] = 0;
   out_4629418675209333035[107] = 0;
   out_4629418675209333035[108] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[12] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[10] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[11]);
   out_4629418675209333035[109] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[12] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[11] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[10]);
   out_4629418675209333035[110] = 1;
   out_4629418675209333035[111] = 0;
   out_4629418675209333035[112] = 0;
   out_4629418675209333035[113] = 0;
   out_4629418675209333035[114] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_4629418675209333035[115] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_4629418675209333035[116] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_4629418675209333035[117] = 0;
   out_4629418675209333035[118] = 0;
   out_4629418675209333035[119] = 0;
   out_4629418675209333035[120] = 0;
   out_4629418675209333035[121] = 0;
   out_4629418675209333035[122] = 0;
   out_4629418675209333035[123] = 0;
   out_4629418675209333035[124] = 0;
   out_4629418675209333035[125] = 0;
   out_4629418675209333035[126] = 0;
   out_4629418675209333035[127] = 0;
   out_4629418675209333035[128] = 0;
   out_4629418675209333035[129] = 0;
   out_4629418675209333035[130] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_4629418675209333035[131] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[18] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[16] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[17]);
   out_4629418675209333035[132] = 1;
   out_4629418675209333035[133] = 0;
   out_4629418675209333035[134] = 0;
   out_4629418675209333035[135] = 0;
   out_4629418675209333035[136] = 0;
   out_4629418675209333035[137] = 0;
   out_4629418675209333035[138] = 0;
   out_4629418675209333035[139] = 0;
   out_4629418675209333035[140] = 0;
   out_4629418675209333035[141] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_4629418675209333035[142] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_4629418675209333035[143] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_4629418675209333035[144] = 0;
   out_4629418675209333035[145] = 0;
   out_4629418675209333035[146] = 0;
   out_4629418675209333035[147] = 0;
   out_4629418675209333035[148] = 0;
   out_4629418675209333035[149] = 0;
   out_4629418675209333035[150] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[17] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_4629418675209333035[151] = 0;
   out_4629418675209333035[152] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]);
   out_4629418675209333035[153] = 0;
   out_4629418675209333035[154] = 1;
   out_4629418675209333035[155] = 0;
   out_4629418675209333035[156] = 0;
   out_4629418675209333035[157] = 0;
   out_4629418675209333035[158] = 0;
   out_4629418675209333035[159] = 0;
   out_4629418675209333035[160] = 0;
   out_4629418675209333035[161] = 0;
   out_4629418675209333035[162] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_4629418675209333035[163] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_4629418675209333035[164] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_4629418675209333035[165] = 0;
   out_4629418675209333035[166] = 0;
   out_4629418675209333035[167] = 0;
   out_4629418675209333035[168] = 0;
   out_4629418675209333035[169] = 0;
   out_4629418675209333035[170] = 0;
   out_4629418675209333035[171] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]);
   out_4629418675209333035[172] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[18] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[17] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[16]);
   out_4629418675209333035[173] = 0;
   out_4629418675209333035[174] = 0;
   out_4629418675209333035[175] = 0;
   out_4629418675209333035[176] = 1;
   out_4629418675209333035[177] = 0;
   out_4629418675209333035[178] = 0;
   out_4629418675209333035[179] = 0;
   out_4629418675209333035[180] = 0;
   out_4629418675209333035[181] = 0;
   out_4629418675209333035[182] = 0;
   out_4629418675209333035[183] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_4629418675209333035[184] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_4629418675209333035[185] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_4629418675209333035[186] = 0;
   out_4629418675209333035[187] = 0;
   out_4629418675209333035[188] = 0;
   out_4629418675209333035[189] = 0;
   out_4629418675209333035[190] = 0;
   out_4629418675209333035[191] = 0;
   out_4629418675209333035[192] = 0;
   out_4629418675209333035[193] = 0;
   out_4629418675209333035[194] = 0;
   out_4629418675209333035[195] = 0;
   out_4629418675209333035[196] = 0;
   out_4629418675209333035[197] = 0;
   out_4629418675209333035[198] = 1;
   out_4629418675209333035[199] = 0;
   out_4629418675209333035[200] = 0;
   out_4629418675209333035[201] = 0;
   out_4629418675209333035[202] = 0;
   out_4629418675209333035[203] = 0;
   out_4629418675209333035[204] = 0;
   out_4629418675209333035[205] = 0;
   out_4629418675209333035[206] = 0;
   out_4629418675209333035[207] = 0;
   out_4629418675209333035[208] = 0;
   out_4629418675209333035[209] = 0;
   out_4629418675209333035[210] = 0;
   out_4629418675209333035[211] = 0;
   out_4629418675209333035[212] = 0;
   out_4629418675209333035[213] = 0;
   out_4629418675209333035[214] = 0;
   out_4629418675209333035[215] = 0;
   out_4629418675209333035[216] = 0;
   out_4629418675209333035[217] = 0;
   out_4629418675209333035[218] = 0;
   out_4629418675209333035[219] = 0;
   out_4629418675209333035[220] = 1;
   out_4629418675209333035[221] = 0;
   out_4629418675209333035[222] = 0;
   out_4629418675209333035[223] = 0;
   out_4629418675209333035[224] = 0;
   out_4629418675209333035[225] = 0;
   out_4629418675209333035[226] = 0;
   out_4629418675209333035[227] = 0;
   out_4629418675209333035[228] = 0;
   out_4629418675209333035[229] = 0;
   out_4629418675209333035[230] = 0;
   out_4629418675209333035[231] = 0;
   out_4629418675209333035[232] = 0;
   out_4629418675209333035[233] = 0;
   out_4629418675209333035[234] = 0;
   out_4629418675209333035[235] = 0;
   out_4629418675209333035[236] = 0;
   out_4629418675209333035[237] = 0;
   out_4629418675209333035[238] = 0;
   out_4629418675209333035[239] = 0;
   out_4629418675209333035[240] = 0;
   out_4629418675209333035[241] = 0;
   out_4629418675209333035[242] = 1;
   out_4629418675209333035[243] = 0;
   out_4629418675209333035[244] = 0;
   out_4629418675209333035[245] = 0;
   out_4629418675209333035[246] = 0;
   out_4629418675209333035[247] = 0;
   out_4629418675209333035[248] = 0;
   out_4629418675209333035[249] = 0;
   out_4629418675209333035[250] = 0;
   out_4629418675209333035[251] = 0;
   out_4629418675209333035[252] = 0;
   out_4629418675209333035[253] = 0;
   out_4629418675209333035[254] = 0;
   out_4629418675209333035[255] = 0;
   out_4629418675209333035[256] = 0;
   out_4629418675209333035[257] = 0;
   out_4629418675209333035[258] = 0;
   out_4629418675209333035[259] = 0;
   out_4629418675209333035[260] = 0;
   out_4629418675209333035[261] = 0;
   out_4629418675209333035[262] = 0;
   out_4629418675209333035[263] = 0;
   out_4629418675209333035[264] = 1;
   out_4629418675209333035[265] = 0;
   out_4629418675209333035[266] = 0;
   out_4629418675209333035[267] = 0;
   out_4629418675209333035[268] = 0;
   out_4629418675209333035[269] = 0;
   out_4629418675209333035[270] = 0;
   out_4629418675209333035[271] = 0;
   out_4629418675209333035[272] = 0;
   out_4629418675209333035[273] = 0;
   out_4629418675209333035[274] = 0;
   out_4629418675209333035[275] = 0;
   out_4629418675209333035[276] = 0;
   out_4629418675209333035[277] = 0;
   out_4629418675209333035[278] = 0;
   out_4629418675209333035[279] = 0;
   out_4629418675209333035[280] = 0;
   out_4629418675209333035[281] = 0;
   out_4629418675209333035[282] = 0;
   out_4629418675209333035[283] = 0;
   out_4629418675209333035[284] = 0;
   out_4629418675209333035[285] = 0;
   out_4629418675209333035[286] = 1;
   out_4629418675209333035[287] = 0;
   out_4629418675209333035[288] = 0;
   out_4629418675209333035[289] = 0;
   out_4629418675209333035[290] = 0;
   out_4629418675209333035[291] = 0;
   out_4629418675209333035[292] = 0;
   out_4629418675209333035[293] = 0;
   out_4629418675209333035[294] = 0;
   out_4629418675209333035[295] = 0;
   out_4629418675209333035[296] = 0;
   out_4629418675209333035[297] = 0;
   out_4629418675209333035[298] = 0;
   out_4629418675209333035[299] = 0;
   out_4629418675209333035[300] = 0;
   out_4629418675209333035[301] = 0;
   out_4629418675209333035[302] = 0;
   out_4629418675209333035[303] = 0;
   out_4629418675209333035[304] = 0;
   out_4629418675209333035[305] = 0;
   out_4629418675209333035[306] = 0;
   out_4629418675209333035[307] = 0;
   out_4629418675209333035[308] = 1;
   out_4629418675209333035[309] = 0;
   out_4629418675209333035[310] = 0;
   out_4629418675209333035[311] = 0;
   out_4629418675209333035[312] = 0;
   out_4629418675209333035[313] = 0;
   out_4629418675209333035[314] = 0;
   out_4629418675209333035[315] = 0;
   out_4629418675209333035[316] = 0;
   out_4629418675209333035[317] = 0;
   out_4629418675209333035[318] = 0;
   out_4629418675209333035[319] = 0;
   out_4629418675209333035[320] = 0;
   out_4629418675209333035[321] = 0;
   out_4629418675209333035[322] = 0;
   out_4629418675209333035[323] = 0;
   out_4629418675209333035[324] = 0;
   out_4629418675209333035[325] = 0;
   out_4629418675209333035[326] = 0;
   out_4629418675209333035[327] = 0;
   out_4629418675209333035[328] = 0;
   out_4629418675209333035[329] = 0;
   out_4629418675209333035[330] = 1;
   out_4629418675209333035[331] = 0;
   out_4629418675209333035[332] = 0;
   out_4629418675209333035[333] = 0;
   out_4629418675209333035[334] = 0;
   out_4629418675209333035[335] = 0;
   out_4629418675209333035[336] = 0;
   out_4629418675209333035[337] = 0;
   out_4629418675209333035[338] = 0;
   out_4629418675209333035[339] = 0;
   out_4629418675209333035[340] = 0;
   out_4629418675209333035[341] = 0;
   out_4629418675209333035[342] = 0;
   out_4629418675209333035[343] = 0;
   out_4629418675209333035[344] = 0;
   out_4629418675209333035[345] = 0;
   out_4629418675209333035[346] = 0;
   out_4629418675209333035[347] = 0;
   out_4629418675209333035[348] = 0;
   out_4629418675209333035[349] = 0;
   out_4629418675209333035[350] = 0;
   out_4629418675209333035[351] = 0;
   out_4629418675209333035[352] = 1;
   out_4629418675209333035[353] = 0;
   out_4629418675209333035[354] = 0;
   out_4629418675209333035[355] = 0;
   out_4629418675209333035[356] = 0;
   out_4629418675209333035[357] = 0;
   out_4629418675209333035[358] = 0;
   out_4629418675209333035[359] = 0;
   out_4629418675209333035[360] = 0;
   out_4629418675209333035[361] = 0;
   out_4629418675209333035[362] = 0;
   out_4629418675209333035[363] = 0;
   out_4629418675209333035[364] = 0;
   out_4629418675209333035[365] = 0;
   out_4629418675209333035[366] = 0;
   out_4629418675209333035[367] = 0;
   out_4629418675209333035[368] = 0;
   out_4629418675209333035[369] = 0;
   out_4629418675209333035[370] = 0;
   out_4629418675209333035[371] = 0;
   out_4629418675209333035[372] = 0;
   out_4629418675209333035[373] = 0;
   out_4629418675209333035[374] = 1;
   out_4629418675209333035[375] = 0;
   out_4629418675209333035[376] = 0;
   out_4629418675209333035[377] = 0;
   out_4629418675209333035[378] = 0;
   out_4629418675209333035[379] = 0;
   out_4629418675209333035[380] = 0;
   out_4629418675209333035[381] = 0;
   out_4629418675209333035[382] = 0;
   out_4629418675209333035[383] = 0;
   out_4629418675209333035[384] = 0;
   out_4629418675209333035[385] = 0;
   out_4629418675209333035[386] = 0;
   out_4629418675209333035[387] = 0;
   out_4629418675209333035[388] = 0;
   out_4629418675209333035[389] = 0;
   out_4629418675209333035[390] = 0;
   out_4629418675209333035[391] = 0;
   out_4629418675209333035[392] = 0;
   out_4629418675209333035[393] = 0;
   out_4629418675209333035[394] = 0;
   out_4629418675209333035[395] = 0;
   out_4629418675209333035[396] = 1;
   out_4629418675209333035[397] = 0;
   out_4629418675209333035[398] = 0;
   out_4629418675209333035[399] = 0;
   out_4629418675209333035[400] = 0;
   out_4629418675209333035[401] = 0;
   out_4629418675209333035[402] = 0;
   out_4629418675209333035[403] = 0;
   out_4629418675209333035[404] = 0;
   out_4629418675209333035[405] = 0;
   out_4629418675209333035[406] = 0;
   out_4629418675209333035[407] = 0;
   out_4629418675209333035[408] = 0;
   out_4629418675209333035[409] = 0;
   out_4629418675209333035[410] = 0;
   out_4629418675209333035[411] = 0;
   out_4629418675209333035[412] = 0;
   out_4629418675209333035[413] = 0;
   out_4629418675209333035[414] = 0;
   out_4629418675209333035[415] = 0;
   out_4629418675209333035[416] = 0;
   out_4629418675209333035[417] = 0;
   out_4629418675209333035[418] = 1;
   out_4629418675209333035[419] = 0;
   out_4629418675209333035[420] = 0;
   out_4629418675209333035[421] = 0;
   out_4629418675209333035[422] = 0;
   out_4629418675209333035[423] = 0;
   out_4629418675209333035[424] = 0;
   out_4629418675209333035[425] = 0;
   out_4629418675209333035[426] = 0;
   out_4629418675209333035[427] = 0;
   out_4629418675209333035[428] = 0;
   out_4629418675209333035[429] = 0;
   out_4629418675209333035[430] = 0;
   out_4629418675209333035[431] = 0;
   out_4629418675209333035[432] = 0;
   out_4629418675209333035[433] = 0;
   out_4629418675209333035[434] = 0;
   out_4629418675209333035[435] = 0;
   out_4629418675209333035[436] = 0;
   out_4629418675209333035[437] = 0;
   out_4629418675209333035[438] = 0;
   out_4629418675209333035[439] = 0;
   out_4629418675209333035[440] = 1;
}
void h_4(double *state, double *unused, double *out_6919725180684590112) {
   out_6919725180684590112[0] = state[10] + state[13];
   out_6919725180684590112[1] = state[11] + state[14];
   out_6919725180684590112[2] = state[12] + state[15];
}
void H_4(double *state, double *unused, double *out_7649182230504147241) {
   out_7649182230504147241[0] = 0;
   out_7649182230504147241[1] = 0;
   out_7649182230504147241[2] = 0;
   out_7649182230504147241[3] = 0;
   out_7649182230504147241[4] = 0;
   out_7649182230504147241[5] = 0;
   out_7649182230504147241[6] = 0;
   out_7649182230504147241[7] = 0;
   out_7649182230504147241[8] = 0;
   out_7649182230504147241[9] = 0;
   out_7649182230504147241[10] = 1;
   out_7649182230504147241[11] = 0;
   out_7649182230504147241[12] = 0;
   out_7649182230504147241[13] = 1;
   out_7649182230504147241[14] = 0;
   out_7649182230504147241[15] = 0;
   out_7649182230504147241[16] = 0;
   out_7649182230504147241[17] = 0;
   out_7649182230504147241[18] = 0;
   out_7649182230504147241[19] = 0;
   out_7649182230504147241[20] = 0;
   out_7649182230504147241[21] = 0;
   out_7649182230504147241[22] = 0;
   out_7649182230504147241[23] = 0;
   out_7649182230504147241[24] = 0;
   out_7649182230504147241[25] = 0;
   out_7649182230504147241[26] = 0;
   out_7649182230504147241[27] = 0;
   out_7649182230504147241[28] = 0;
   out_7649182230504147241[29] = 0;
   out_7649182230504147241[30] = 0;
   out_7649182230504147241[31] = 0;
   out_7649182230504147241[32] = 0;
   out_7649182230504147241[33] = 1;
   out_7649182230504147241[34] = 0;
   out_7649182230504147241[35] = 0;
   out_7649182230504147241[36] = 1;
   out_7649182230504147241[37] = 0;
   out_7649182230504147241[38] = 0;
   out_7649182230504147241[39] = 0;
   out_7649182230504147241[40] = 0;
   out_7649182230504147241[41] = 0;
   out_7649182230504147241[42] = 0;
   out_7649182230504147241[43] = 0;
   out_7649182230504147241[44] = 0;
   out_7649182230504147241[45] = 0;
   out_7649182230504147241[46] = 0;
   out_7649182230504147241[47] = 0;
   out_7649182230504147241[48] = 0;
   out_7649182230504147241[49] = 0;
   out_7649182230504147241[50] = 0;
   out_7649182230504147241[51] = 0;
   out_7649182230504147241[52] = 0;
   out_7649182230504147241[53] = 0;
   out_7649182230504147241[54] = 0;
   out_7649182230504147241[55] = 0;
   out_7649182230504147241[56] = 1;
   out_7649182230504147241[57] = 0;
   out_7649182230504147241[58] = 0;
   out_7649182230504147241[59] = 1;
   out_7649182230504147241[60] = 0;
   out_7649182230504147241[61] = 0;
   out_7649182230504147241[62] = 0;
   out_7649182230504147241[63] = 0;
   out_7649182230504147241[64] = 0;
   out_7649182230504147241[65] = 0;
}
void h_9(double *state, double *unused, double *out_6579658735120463831) {
   out_6579658735120463831[0] = state[10];
   out_6579658735120463831[1] = state[11];
   out_6579658735120463831[2] = state[12];
}
void H_9(double *state, double *unused, double *out_7890371877133737886) {
   out_7890371877133737886[0] = 0;
   out_7890371877133737886[1] = 0;
   out_7890371877133737886[2] = 0;
   out_7890371877133737886[3] = 0;
   out_7890371877133737886[4] = 0;
   out_7890371877133737886[5] = 0;
   out_7890371877133737886[6] = 0;
   out_7890371877133737886[7] = 0;
   out_7890371877133737886[8] = 0;
   out_7890371877133737886[9] = 0;
   out_7890371877133737886[10] = 1;
   out_7890371877133737886[11] = 0;
   out_7890371877133737886[12] = 0;
   out_7890371877133737886[13] = 0;
   out_7890371877133737886[14] = 0;
   out_7890371877133737886[15] = 0;
   out_7890371877133737886[16] = 0;
   out_7890371877133737886[17] = 0;
   out_7890371877133737886[18] = 0;
   out_7890371877133737886[19] = 0;
   out_7890371877133737886[20] = 0;
   out_7890371877133737886[21] = 0;
   out_7890371877133737886[22] = 0;
   out_7890371877133737886[23] = 0;
   out_7890371877133737886[24] = 0;
   out_7890371877133737886[25] = 0;
   out_7890371877133737886[26] = 0;
   out_7890371877133737886[27] = 0;
   out_7890371877133737886[28] = 0;
   out_7890371877133737886[29] = 0;
   out_7890371877133737886[30] = 0;
   out_7890371877133737886[31] = 0;
   out_7890371877133737886[32] = 0;
   out_7890371877133737886[33] = 1;
   out_7890371877133737886[34] = 0;
   out_7890371877133737886[35] = 0;
   out_7890371877133737886[36] = 0;
   out_7890371877133737886[37] = 0;
   out_7890371877133737886[38] = 0;
   out_7890371877133737886[39] = 0;
   out_7890371877133737886[40] = 0;
   out_7890371877133737886[41] = 0;
   out_7890371877133737886[42] = 0;
   out_7890371877133737886[43] = 0;
   out_7890371877133737886[44] = 0;
   out_7890371877133737886[45] = 0;
   out_7890371877133737886[46] = 0;
   out_7890371877133737886[47] = 0;
   out_7890371877133737886[48] = 0;
   out_7890371877133737886[49] = 0;
   out_7890371877133737886[50] = 0;
   out_7890371877133737886[51] = 0;
   out_7890371877133737886[52] = 0;
   out_7890371877133737886[53] = 0;
   out_7890371877133737886[54] = 0;
   out_7890371877133737886[55] = 0;
   out_7890371877133737886[56] = 1;
   out_7890371877133737886[57] = 0;
   out_7890371877133737886[58] = 0;
   out_7890371877133737886[59] = 0;
   out_7890371877133737886[60] = 0;
   out_7890371877133737886[61] = 0;
   out_7890371877133737886[62] = 0;
   out_7890371877133737886[63] = 0;
   out_7890371877133737886[64] = 0;
   out_7890371877133737886[65] = 0;
}
void h_10(double *state, double *unused, double *out_7199017713804032144) {
   out_7199017713804032144[0] = 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0] + state[16] + state[19];
   out_7199017713804032144[1] = 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1] + state[17] + state[20];
   out_7199017713804032144[2] = 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[2] + state[18] + state[21];
}
void H_10(double *state, double *unused, double *out_5379501964687391970) {
   out_5379501964687391970[0] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*pow(state[0], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_5379501964687391970[1] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_5379501964687391970[2] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[2];
   out_5379501964687391970[3] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_5379501964687391970[4] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_5379501964687391970[5] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_5379501964687391970[6] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_5379501964687391970[7] = 0;
   out_5379501964687391970[8] = 0;
   out_5379501964687391970[9] = 0;
   out_5379501964687391970[10] = 0;
   out_5379501964687391970[11] = 0;
   out_5379501964687391970[12] = 0;
   out_5379501964687391970[13] = 0;
   out_5379501964687391970[14] = 0;
   out_5379501964687391970[15] = 0;
   out_5379501964687391970[16] = 1;
   out_5379501964687391970[17] = 0;
   out_5379501964687391970[18] = 0;
   out_5379501964687391970[19] = 1;
   out_5379501964687391970[20] = 0;
   out_5379501964687391970[21] = 0;
   out_5379501964687391970[22] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_5379501964687391970[23] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*pow(state[1], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_5379501964687391970[24] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1]*state[2];
   out_5379501964687391970[25] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_5379501964687391970[26] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_5379501964687391970[27] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_5379501964687391970[28] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_5379501964687391970[29] = 0;
   out_5379501964687391970[30] = 0;
   out_5379501964687391970[31] = 0;
   out_5379501964687391970[32] = 0;
   out_5379501964687391970[33] = 0;
   out_5379501964687391970[34] = 0;
   out_5379501964687391970[35] = 0;
   out_5379501964687391970[36] = 0;
   out_5379501964687391970[37] = 0;
   out_5379501964687391970[38] = 0;
   out_5379501964687391970[39] = 1;
   out_5379501964687391970[40] = 0;
   out_5379501964687391970[41] = 0;
   out_5379501964687391970[42] = 1;
   out_5379501964687391970[43] = 0;
   out_5379501964687391970[44] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[0]*state[2];
   out_5379501964687391970[45] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[1]*state[2];
   out_5379501964687391970[46] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*pow(state[2], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_5379501964687391970[47] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_5379501964687391970[48] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_5379501964687391970[49] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_5379501964687391970[50] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_5379501964687391970[51] = 0;
   out_5379501964687391970[52] = 0;
   out_5379501964687391970[53] = 0;
   out_5379501964687391970[54] = 0;
   out_5379501964687391970[55] = 0;
   out_5379501964687391970[56] = 0;
   out_5379501964687391970[57] = 0;
   out_5379501964687391970[58] = 0;
   out_5379501964687391970[59] = 0;
   out_5379501964687391970[60] = 0;
   out_5379501964687391970[61] = 0;
   out_5379501964687391970[62] = 1;
   out_5379501964687391970[63] = 0;
   out_5379501964687391970[64] = 0;
   out_5379501964687391970[65] = 1;
}
void h_12(double *state, double *unused, double *out_5558218791521407497) {
   out_5558218791521407497[0] = state[0];
   out_5558218791521407497[1] = state[1];
   out_5558218791521407497[2] = state[2];
}
void H_12(double *state, double *unused, double *out_8270281255551740908) {
   out_8270281255551740908[0] = 1;
   out_8270281255551740908[1] = 0;
   out_8270281255551740908[2] = 0;
   out_8270281255551740908[3] = 0;
   out_8270281255551740908[4] = 0;
   out_8270281255551740908[5] = 0;
   out_8270281255551740908[6] = 0;
   out_8270281255551740908[7] = 0;
   out_8270281255551740908[8] = 0;
   out_8270281255551740908[9] = 0;
   out_8270281255551740908[10] = 0;
   out_8270281255551740908[11] = 0;
   out_8270281255551740908[12] = 0;
   out_8270281255551740908[13] = 0;
   out_8270281255551740908[14] = 0;
   out_8270281255551740908[15] = 0;
   out_8270281255551740908[16] = 0;
   out_8270281255551740908[17] = 0;
   out_8270281255551740908[18] = 0;
   out_8270281255551740908[19] = 0;
   out_8270281255551740908[20] = 0;
   out_8270281255551740908[21] = 0;
   out_8270281255551740908[22] = 0;
   out_8270281255551740908[23] = 1;
   out_8270281255551740908[24] = 0;
   out_8270281255551740908[25] = 0;
   out_8270281255551740908[26] = 0;
   out_8270281255551740908[27] = 0;
   out_8270281255551740908[28] = 0;
   out_8270281255551740908[29] = 0;
   out_8270281255551740908[30] = 0;
   out_8270281255551740908[31] = 0;
   out_8270281255551740908[32] = 0;
   out_8270281255551740908[33] = 0;
   out_8270281255551740908[34] = 0;
   out_8270281255551740908[35] = 0;
   out_8270281255551740908[36] = 0;
   out_8270281255551740908[37] = 0;
   out_8270281255551740908[38] = 0;
   out_8270281255551740908[39] = 0;
   out_8270281255551740908[40] = 0;
   out_8270281255551740908[41] = 0;
   out_8270281255551740908[42] = 0;
   out_8270281255551740908[43] = 0;
   out_8270281255551740908[44] = 0;
   out_8270281255551740908[45] = 0;
   out_8270281255551740908[46] = 1;
   out_8270281255551740908[47] = 0;
   out_8270281255551740908[48] = 0;
   out_8270281255551740908[49] = 0;
   out_8270281255551740908[50] = 0;
   out_8270281255551740908[51] = 0;
   out_8270281255551740908[52] = 0;
   out_8270281255551740908[53] = 0;
   out_8270281255551740908[54] = 0;
   out_8270281255551740908[55] = 0;
   out_8270281255551740908[56] = 0;
   out_8270281255551740908[57] = 0;
   out_8270281255551740908[58] = 0;
   out_8270281255551740908[59] = 0;
   out_8270281255551740908[60] = 0;
   out_8270281255551740908[61] = 0;
   out_8270281255551740908[62] = 0;
   out_8270281255551740908[63] = 0;
   out_8270281255551740908[64] = 0;
   out_8270281255551740908[65] = 0;
}
void h_35(double *state, double *unused, double *out_5935994973679120654) {
   out_5935994973679120654[0] = state[7];
   out_5935994973679120654[1] = state[8];
   out_5935994973679120654[2] = state[9];
}
void H_35(double *state, double *unused, double *out_7430899785832796999) {
   out_7430899785832796999[0] = 0;
   out_7430899785832796999[1] = 0;
   out_7430899785832796999[2] = 0;
   out_7430899785832796999[3] = 0;
   out_7430899785832796999[4] = 0;
   out_7430899785832796999[5] = 0;
   out_7430899785832796999[6] = 0;
   out_7430899785832796999[7] = 1;
   out_7430899785832796999[8] = 0;
   out_7430899785832796999[9] = 0;
   out_7430899785832796999[10] = 0;
   out_7430899785832796999[11] = 0;
   out_7430899785832796999[12] = 0;
   out_7430899785832796999[13] = 0;
   out_7430899785832796999[14] = 0;
   out_7430899785832796999[15] = 0;
   out_7430899785832796999[16] = 0;
   out_7430899785832796999[17] = 0;
   out_7430899785832796999[18] = 0;
   out_7430899785832796999[19] = 0;
   out_7430899785832796999[20] = 0;
   out_7430899785832796999[21] = 0;
   out_7430899785832796999[22] = 0;
   out_7430899785832796999[23] = 0;
   out_7430899785832796999[24] = 0;
   out_7430899785832796999[25] = 0;
   out_7430899785832796999[26] = 0;
   out_7430899785832796999[27] = 0;
   out_7430899785832796999[28] = 0;
   out_7430899785832796999[29] = 0;
   out_7430899785832796999[30] = 1;
   out_7430899785832796999[31] = 0;
   out_7430899785832796999[32] = 0;
   out_7430899785832796999[33] = 0;
   out_7430899785832796999[34] = 0;
   out_7430899785832796999[35] = 0;
   out_7430899785832796999[36] = 0;
   out_7430899785832796999[37] = 0;
   out_7430899785832796999[38] = 0;
   out_7430899785832796999[39] = 0;
   out_7430899785832796999[40] = 0;
   out_7430899785832796999[41] = 0;
   out_7430899785832796999[42] = 0;
   out_7430899785832796999[43] = 0;
   out_7430899785832796999[44] = 0;
   out_7430899785832796999[45] = 0;
   out_7430899785832796999[46] = 0;
   out_7430899785832796999[47] = 0;
   out_7430899785832796999[48] = 0;
   out_7430899785832796999[49] = 0;
   out_7430899785832796999[50] = 0;
   out_7430899785832796999[51] = 0;
   out_7430899785832796999[52] = 0;
   out_7430899785832796999[53] = 1;
   out_7430899785832796999[54] = 0;
   out_7430899785832796999[55] = 0;
   out_7430899785832796999[56] = 0;
   out_7430899785832796999[57] = 0;
   out_7430899785832796999[58] = 0;
   out_7430899785832796999[59] = 0;
   out_7430899785832796999[60] = 0;
   out_7430899785832796999[61] = 0;
   out_7430899785832796999[62] = 0;
   out_7430899785832796999[63] = 0;
   out_7430899785832796999[64] = 0;
   out_7430899785832796999[65] = 0;
}
void h_32(double *state, double *unused, double *out_8756716565681570076) {
   out_8756716565681570076[0] = state[3];
   out_8756716565681570076[1] = state[4];
   out_8756716565681570076[2] = state[5];
   out_8756716565681570076[3] = state[6];
}
void H_32(double *state, double *unused, double *out_4647241621414379406) {
   out_4647241621414379406[0] = 0;
   out_4647241621414379406[1] = 0;
   out_4647241621414379406[2] = 0;
   out_4647241621414379406[3] = 1;
   out_4647241621414379406[4] = 0;
   out_4647241621414379406[5] = 0;
   out_4647241621414379406[6] = 0;
   out_4647241621414379406[7] = 0;
   out_4647241621414379406[8] = 0;
   out_4647241621414379406[9] = 0;
   out_4647241621414379406[10] = 0;
   out_4647241621414379406[11] = 0;
   out_4647241621414379406[12] = 0;
   out_4647241621414379406[13] = 0;
   out_4647241621414379406[14] = 0;
   out_4647241621414379406[15] = 0;
   out_4647241621414379406[16] = 0;
   out_4647241621414379406[17] = 0;
   out_4647241621414379406[18] = 0;
   out_4647241621414379406[19] = 0;
   out_4647241621414379406[20] = 0;
   out_4647241621414379406[21] = 0;
   out_4647241621414379406[22] = 0;
   out_4647241621414379406[23] = 0;
   out_4647241621414379406[24] = 0;
   out_4647241621414379406[25] = 0;
   out_4647241621414379406[26] = 1;
   out_4647241621414379406[27] = 0;
   out_4647241621414379406[28] = 0;
   out_4647241621414379406[29] = 0;
   out_4647241621414379406[30] = 0;
   out_4647241621414379406[31] = 0;
   out_4647241621414379406[32] = 0;
   out_4647241621414379406[33] = 0;
   out_4647241621414379406[34] = 0;
   out_4647241621414379406[35] = 0;
   out_4647241621414379406[36] = 0;
   out_4647241621414379406[37] = 0;
   out_4647241621414379406[38] = 0;
   out_4647241621414379406[39] = 0;
   out_4647241621414379406[40] = 0;
   out_4647241621414379406[41] = 0;
   out_4647241621414379406[42] = 0;
   out_4647241621414379406[43] = 0;
   out_4647241621414379406[44] = 0;
   out_4647241621414379406[45] = 0;
   out_4647241621414379406[46] = 0;
   out_4647241621414379406[47] = 0;
   out_4647241621414379406[48] = 0;
   out_4647241621414379406[49] = 1;
   out_4647241621414379406[50] = 0;
   out_4647241621414379406[51] = 0;
   out_4647241621414379406[52] = 0;
   out_4647241621414379406[53] = 0;
   out_4647241621414379406[54] = 0;
   out_4647241621414379406[55] = 0;
   out_4647241621414379406[56] = 0;
   out_4647241621414379406[57] = 0;
   out_4647241621414379406[58] = 0;
   out_4647241621414379406[59] = 0;
   out_4647241621414379406[60] = 0;
   out_4647241621414379406[61] = 0;
   out_4647241621414379406[62] = 0;
   out_4647241621414379406[63] = 0;
   out_4647241621414379406[64] = 0;
   out_4647241621414379406[65] = 0;
   out_4647241621414379406[66] = 0;
   out_4647241621414379406[67] = 0;
   out_4647241621414379406[68] = 0;
   out_4647241621414379406[69] = 0;
   out_4647241621414379406[70] = 0;
   out_4647241621414379406[71] = 0;
   out_4647241621414379406[72] = 1;
   out_4647241621414379406[73] = 0;
   out_4647241621414379406[74] = 0;
   out_4647241621414379406[75] = 0;
   out_4647241621414379406[76] = 0;
   out_4647241621414379406[77] = 0;
   out_4647241621414379406[78] = 0;
   out_4647241621414379406[79] = 0;
   out_4647241621414379406[80] = 0;
   out_4647241621414379406[81] = 0;
   out_4647241621414379406[82] = 0;
   out_4647241621414379406[83] = 0;
   out_4647241621414379406[84] = 0;
   out_4647241621414379406[85] = 0;
   out_4647241621414379406[86] = 0;
   out_4647241621414379406[87] = 0;
}
void h_13(double *state, double *unused, double *out_9075639493952822068) {
   out_9075639493952822068[0] = (-2*state[3]*state[5] + 2*state[4]*state[6])*state[9] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[8] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[7];
   out_9075639493952822068[1] = (2*state[3]*state[4] + 2*state[5]*state[6])*state[9] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[7] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[8];
   out_9075639493952822068[2] = (-2*state[3]*state[4] + 2*state[5]*state[6])*state[8] + (2*state[3]*state[5] + 2*state[4]*state[6])*state[7] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[9];
}
void H_13(double *state, double *unused, double *out_6314434707637418687) {
   out_6314434707637418687[0] = 0;
   out_6314434707637418687[1] = 0;
   out_6314434707637418687[2] = 0;
   out_6314434707637418687[3] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_6314434707637418687[4] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_6314434707637418687[5] = -2*state[3]*state[9] + 2*state[4]*state[8] - 2*state[5]*state[7];
   out_6314434707637418687[6] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_6314434707637418687[7] = pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2);
   out_6314434707637418687[8] = 2*state[3]*state[6] + 2*state[4]*state[5];
   out_6314434707637418687[9] = -2*state[3]*state[5] + 2*state[4]*state[6];
   out_6314434707637418687[10] = 0;
   out_6314434707637418687[11] = 0;
   out_6314434707637418687[12] = 0;
   out_6314434707637418687[13] = 0;
   out_6314434707637418687[14] = 0;
   out_6314434707637418687[15] = 0;
   out_6314434707637418687[16] = 0;
   out_6314434707637418687[17] = 0;
   out_6314434707637418687[18] = 0;
   out_6314434707637418687[19] = 0;
   out_6314434707637418687[20] = 0;
   out_6314434707637418687[21] = 0;
   out_6314434707637418687[22] = 0;
   out_6314434707637418687[23] = 0;
   out_6314434707637418687[24] = 0;
   out_6314434707637418687[25] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_6314434707637418687[26] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_6314434707637418687[27] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_6314434707637418687[28] = -2*state[3]*state[7] + 2*state[5]*state[9] - 2*state[6]*state[8];
   out_6314434707637418687[29] = -2*state[3]*state[6] + 2*state[4]*state[5];
   out_6314434707637418687[30] = pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2);
   out_6314434707637418687[31] = 2*state[3]*state[4] + 2*state[5]*state[6];
   out_6314434707637418687[32] = 0;
   out_6314434707637418687[33] = 0;
   out_6314434707637418687[34] = 0;
   out_6314434707637418687[35] = 0;
   out_6314434707637418687[36] = 0;
   out_6314434707637418687[37] = 0;
   out_6314434707637418687[38] = 0;
   out_6314434707637418687[39] = 0;
   out_6314434707637418687[40] = 0;
   out_6314434707637418687[41] = 0;
   out_6314434707637418687[42] = 0;
   out_6314434707637418687[43] = 0;
   out_6314434707637418687[44] = 0;
   out_6314434707637418687[45] = 0;
   out_6314434707637418687[46] = 0;
   out_6314434707637418687[47] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_6314434707637418687[48] = -2*state[3]*state[8] - 2*state[4]*state[9] + 2*state[6]*state[7];
   out_6314434707637418687[49] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_6314434707637418687[50] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_6314434707637418687[51] = 2*state[3]*state[5] + 2*state[4]*state[6];
   out_6314434707637418687[52] = -2*state[3]*state[4] + 2*state[5]*state[6];
   out_6314434707637418687[53] = pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2);
   out_6314434707637418687[54] = 0;
   out_6314434707637418687[55] = 0;
   out_6314434707637418687[56] = 0;
   out_6314434707637418687[57] = 0;
   out_6314434707637418687[58] = 0;
   out_6314434707637418687[59] = 0;
   out_6314434707637418687[60] = 0;
   out_6314434707637418687[61] = 0;
   out_6314434707637418687[62] = 0;
   out_6314434707637418687[63] = 0;
   out_6314434707637418687[64] = 0;
   out_6314434707637418687[65] = 0;
}
void h_14(double *state, double *unused, double *out_6579658735120463831) {
   out_6579658735120463831[0] = state[10];
   out_6579658735120463831[1] = state[11];
   out_6579658735120463831[2] = state[12];
}
void H_14(double *state, double *unused, double *out_7890371877133737886) {
   out_7890371877133737886[0] = 0;
   out_7890371877133737886[1] = 0;
   out_7890371877133737886[2] = 0;
   out_7890371877133737886[3] = 0;
   out_7890371877133737886[4] = 0;
   out_7890371877133737886[5] = 0;
   out_7890371877133737886[6] = 0;
   out_7890371877133737886[7] = 0;
   out_7890371877133737886[8] = 0;
   out_7890371877133737886[9] = 0;
   out_7890371877133737886[10] = 1;
   out_7890371877133737886[11] = 0;
   out_7890371877133737886[12] = 0;
   out_7890371877133737886[13] = 0;
   out_7890371877133737886[14] = 0;
   out_7890371877133737886[15] = 0;
   out_7890371877133737886[16] = 0;
   out_7890371877133737886[17] = 0;
   out_7890371877133737886[18] = 0;
   out_7890371877133737886[19] = 0;
   out_7890371877133737886[20] = 0;
   out_7890371877133737886[21] = 0;
   out_7890371877133737886[22] = 0;
   out_7890371877133737886[23] = 0;
   out_7890371877133737886[24] = 0;
   out_7890371877133737886[25] = 0;
   out_7890371877133737886[26] = 0;
   out_7890371877133737886[27] = 0;
   out_7890371877133737886[28] = 0;
   out_7890371877133737886[29] = 0;
   out_7890371877133737886[30] = 0;
   out_7890371877133737886[31] = 0;
   out_7890371877133737886[32] = 0;
   out_7890371877133737886[33] = 1;
   out_7890371877133737886[34] = 0;
   out_7890371877133737886[35] = 0;
   out_7890371877133737886[36] = 0;
   out_7890371877133737886[37] = 0;
   out_7890371877133737886[38] = 0;
   out_7890371877133737886[39] = 0;
   out_7890371877133737886[40] = 0;
   out_7890371877133737886[41] = 0;
   out_7890371877133737886[42] = 0;
   out_7890371877133737886[43] = 0;
   out_7890371877133737886[44] = 0;
   out_7890371877133737886[45] = 0;
   out_7890371877133737886[46] = 0;
   out_7890371877133737886[47] = 0;
   out_7890371877133737886[48] = 0;
   out_7890371877133737886[49] = 0;
   out_7890371877133737886[50] = 0;
   out_7890371877133737886[51] = 0;
   out_7890371877133737886[52] = 0;
   out_7890371877133737886[53] = 0;
   out_7890371877133737886[54] = 0;
   out_7890371877133737886[55] = 0;
   out_7890371877133737886[56] = 1;
   out_7890371877133737886[57] = 0;
   out_7890371877133737886[58] = 0;
   out_7890371877133737886[59] = 0;
   out_7890371877133737886[60] = 0;
   out_7890371877133737886[61] = 0;
   out_7890371877133737886[62] = 0;
   out_7890371877133737886[63] = 0;
   out_7890371877133737886[64] = 0;
   out_7890371877133737886[65] = 0;
}
void h_33(double *state, double *unused, double *out_4423886799982408917) {
   out_4423886799982408917[0] = state[16];
   out_4423886799982408917[1] = state[17];
   out_4423886799982408917[2] = state[18];
}
void H_33(double *state, double *unused, double *out_4280342781193939395) {
   out_4280342781193939395[0] = 0;
   out_4280342781193939395[1] = 0;
   out_4280342781193939395[2] = 0;
   out_4280342781193939395[3] = 0;
   out_4280342781193939395[4] = 0;
   out_4280342781193939395[5] = 0;
   out_4280342781193939395[6] = 0;
   out_4280342781193939395[7] = 0;
   out_4280342781193939395[8] = 0;
   out_4280342781193939395[9] = 0;
   out_4280342781193939395[10] = 0;
   out_4280342781193939395[11] = 0;
   out_4280342781193939395[12] = 0;
   out_4280342781193939395[13] = 0;
   out_4280342781193939395[14] = 0;
   out_4280342781193939395[15] = 0;
   out_4280342781193939395[16] = 1;
   out_4280342781193939395[17] = 0;
   out_4280342781193939395[18] = 0;
   out_4280342781193939395[19] = 0;
   out_4280342781193939395[20] = 0;
   out_4280342781193939395[21] = 0;
   out_4280342781193939395[22] = 0;
   out_4280342781193939395[23] = 0;
   out_4280342781193939395[24] = 0;
   out_4280342781193939395[25] = 0;
   out_4280342781193939395[26] = 0;
   out_4280342781193939395[27] = 0;
   out_4280342781193939395[28] = 0;
   out_4280342781193939395[29] = 0;
   out_4280342781193939395[30] = 0;
   out_4280342781193939395[31] = 0;
   out_4280342781193939395[32] = 0;
   out_4280342781193939395[33] = 0;
   out_4280342781193939395[34] = 0;
   out_4280342781193939395[35] = 0;
   out_4280342781193939395[36] = 0;
   out_4280342781193939395[37] = 0;
   out_4280342781193939395[38] = 0;
   out_4280342781193939395[39] = 1;
   out_4280342781193939395[40] = 0;
   out_4280342781193939395[41] = 0;
   out_4280342781193939395[42] = 0;
   out_4280342781193939395[43] = 0;
   out_4280342781193939395[44] = 0;
   out_4280342781193939395[45] = 0;
   out_4280342781193939395[46] = 0;
   out_4280342781193939395[47] = 0;
   out_4280342781193939395[48] = 0;
   out_4280342781193939395[49] = 0;
   out_4280342781193939395[50] = 0;
   out_4280342781193939395[51] = 0;
   out_4280342781193939395[52] = 0;
   out_4280342781193939395[53] = 0;
   out_4280342781193939395[54] = 0;
   out_4280342781193939395[55] = 0;
   out_4280342781193939395[56] = 0;
   out_4280342781193939395[57] = 0;
   out_4280342781193939395[58] = 0;
   out_4280342781193939395[59] = 0;
   out_4280342781193939395[60] = 0;
   out_4280342781193939395[61] = 0;
   out_4280342781193939395[62] = 1;
   out_4280342781193939395[63] = 0;
   out_4280342781193939395[64] = 0;
   out_4280342781193939395[65] = 0;
}
#include <eigen3/Eigen/Dense>
#include <iostream>

typedef Eigen::Matrix<double, DIM, DIM, Eigen::RowMajor> DDM;
typedef Eigen::Matrix<double, EDIM, EDIM, Eigen::RowMajor> EEM;
typedef Eigen::Matrix<double, DIM, EDIM, Eigen::RowMajor> DEM;

void predict(double *in_x, double *in_P, double *in_Q, double dt) {
  typedef Eigen::Matrix<double, MEDIM, MEDIM, Eigen::RowMajor> RRM;

  double nx[DIM] = {0};
  double in_F[EDIM*EDIM] = {0};

  // functions from sympy
  f_fun(in_x, dt, nx);
  F_fun(in_x, dt, in_F);


  EEM F(in_F);
  EEM P(in_P);
  EEM Q(in_Q);

  RRM F_main = F.topLeftCorner(MEDIM, MEDIM);
  P.topLeftCorner(MEDIM, MEDIM) = (F_main * P.topLeftCorner(MEDIM, MEDIM)) * F_main.transpose();
  P.topRightCorner(MEDIM, EDIM - MEDIM) = F_main * P.topRightCorner(MEDIM, EDIM - MEDIM);
  P.bottomLeftCorner(EDIM - MEDIM, MEDIM) = P.bottomLeftCorner(EDIM - MEDIM, MEDIM) * F_main.transpose();

  P = P + dt*Q;

  // copy out state
  memcpy(in_x, nx, DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
}

// note: extra_args dim only correct when null space projecting
// otherwise 1
template <int ZDIM, int EADIM, bool MAHA_TEST>
void update(double *in_x, double *in_P, Hfun h_fun, Hfun H_fun, Hfun Hea_fun, double *in_z, double *in_R, double *in_ea, double MAHA_THRESHOLD) {
  typedef Eigen::Matrix<double, ZDIM, ZDIM, Eigen::RowMajor> ZZM;
  typedef Eigen::Matrix<double, ZDIM, DIM, Eigen::RowMajor> ZDM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, EDIM, Eigen::RowMajor> XEM;
  //typedef Eigen::Matrix<double, EDIM, ZDIM, Eigen::RowMajor> EZM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, 1> X1M;
  typedef Eigen::Matrix<double, Eigen::Dynamic, Eigen::Dynamic, Eigen::RowMajor> XXM;

  double in_hx[ZDIM] = {0};
  double in_H[ZDIM * DIM] = {0};
  double in_H_mod[EDIM * DIM] = {0};
  double delta_x[EDIM] = {0};
  double x_new[DIM] = {0};


  // state x, P
  Eigen::Matrix<double, ZDIM, 1> z(in_z);
  EEM P(in_P);
  ZZM pre_R(in_R);

  // functions from sympy
  h_fun(in_x, in_ea, in_hx);
  H_fun(in_x, in_ea, in_H);
  ZDM pre_H(in_H);

  // get y (y = z - hx)
  Eigen::Matrix<double, ZDIM, 1> pre_y(in_hx); pre_y = z - pre_y;
  X1M y; XXM H; XXM R;
  if (Hea_fun){
    typedef Eigen::Matrix<double, ZDIM, EADIM, Eigen::RowMajor> ZAM;
    double in_Hea[ZDIM * EADIM] = {0};
    Hea_fun(in_x, in_ea, in_Hea);
    ZAM Hea(in_Hea);
    XXM A = Hea.transpose().fullPivLu().kernel();


    y = A.transpose() * pre_y;
    H = A.transpose() * pre_H;
    R = A.transpose() * pre_R * A;
  } else {
    y = pre_y;
    H = pre_H;
    R = pre_R;
  }
  // get modified H
  H_mod_fun(in_x, in_H_mod);
  DEM H_mod(in_H_mod);
  XEM H_err = H * H_mod;

  // Do mahalobis distance test
  if (MAHA_TEST){
    XXM a = (H_err * P * H_err.transpose() + R).inverse();
    double maha_dist = y.transpose() * a * y;
    if (maha_dist > MAHA_THRESHOLD){
      R = 1.0e16 * R;
    }
  }

  // Outlier resilient weighting
  double weight = 1;//(1.5)/(1 + y.squaredNorm()/R.sum());

  // kalman gains and I_KH
  XXM S = ((H_err * P) * H_err.transpose()) + R/weight;
  XEM KT = S.fullPivLu().solve(H_err * P.transpose());
  //EZM K = KT.transpose(); TODO: WHY DOES THIS NOT COMPILE?
  //EZM K = S.fullPivLu().solve(H_err * P.transpose()).transpose();
  //std::cout << "Here is the matrix rot:\n" << K << std::endl;
  EEM I_KH = Eigen::Matrix<double, EDIM, EDIM>::Identity() - (KT.transpose() * H_err);

  // update state by injecting dx
  Eigen::Matrix<double, EDIM, 1> dx(delta_x);
  dx  = (KT.transpose() * y);
  memcpy(delta_x, dx.data(), EDIM * sizeof(double));
  err_fun(in_x, delta_x, x_new);
  Eigen::Matrix<double, DIM, 1> x(x_new);

  // update cov
  P = ((I_KH * P) * I_KH.transpose()) + ((KT.transpose() * R) * KT);

  // copy out state
  memcpy(in_x, x.data(), DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
  memcpy(in_z, y.data(), y.rows() * sizeof(double));
}




}
extern "C" {

void live_update_4(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_4, H_4, NULL, in_z, in_R, in_ea, MAHA_THRESH_4);
}
void live_update_9(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_9, H_9, NULL, in_z, in_R, in_ea, MAHA_THRESH_9);
}
void live_update_10(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_10, H_10, NULL, in_z, in_R, in_ea, MAHA_THRESH_10);
}
void live_update_12(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_12, H_12, NULL, in_z, in_R, in_ea, MAHA_THRESH_12);
}
void live_update_35(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_35, H_35, NULL, in_z, in_R, in_ea, MAHA_THRESH_35);
}
void live_update_32(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<4, 3, 0>(in_x, in_P, h_32, H_32, NULL, in_z, in_R, in_ea, MAHA_THRESH_32);
}
void live_update_13(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_13, H_13, NULL, in_z, in_R, in_ea, MAHA_THRESH_13);
}
void live_update_14(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_14, H_14, NULL, in_z, in_R, in_ea, MAHA_THRESH_14);
}
void live_update_33(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_33, H_33, NULL, in_z, in_R, in_ea, MAHA_THRESH_33);
}
void live_H(double *in_vec, double *out_882580126896942295) {
  H(in_vec, out_882580126896942295);
}
void live_err_fun(double *nom_x, double *delta_x, double *out_5996174494959834025) {
  err_fun(nom_x, delta_x, out_5996174494959834025);
}
void live_inv_err_fun(double *nom_x, double *true_x, double *out_6459459844882907304) {
  inv_err_fun(nom_x, true_x, out_6459459844882907304);
}
void live_H_mod_fun(double *state, double *out_8080057036640925045) {
  H_mod_fun(state, out_8080057036640925045);
}
void live_f_fun(double *state, double dt, double *out_5988242100613668006) {
  f_fun(state,  dt, out_5988242100613668006);
}
void live_F_fun(double *state, double dt, double *out_4629418675209333035) {
  F_fun(state,  dt, out_4629418675209333035);
}
void live_h_4(double *state, double *unused, double *out_6919725180684590112) {
  h_4(state, unused, out_6919725180684590112);
}
void live_H_4(double *state, double *unused, double *out_7649182230504147241) {
  H_4(state, unused, out_7649182230504147241);
}
void live_h_9(double *state, double *unused, double *out_6579658735120463831) {
  h_9(state, unused, out_6579658735120463831);
}
void live_H_9(double *state, double *unused, double *out_7890371877133737886) {
  H_9(state, unused, out_7890371877133737886);
}
void live_h_10(double *state, double *unused, double *out_7199017713804032144) {
  h_10(state, unused, out_7199017713804032144);
}
void live_H_10(double *state, double *unused, double *out_5379501964687391970) {
  H_10(state, unused, out_5379501964687391970);
}
void live_h_12(double *state, double *unused, double *out_5558218791521407497) {
  h_12(state, unused, out_5558218791521407497);
}
void live_H_12(double *state, double *unused, double *out_8270281255551740908) {
  H_12(state, unused, out_8270281255551740908);
}
void live_h_35(double *state, double *unused, double *out_5935994973679120654) {
  h_35(state, unused, out_5935994973679120654);
}
void live_H_35(double *state, double *unused, double *out_7430899785832796999) {
  H_35(state, unused, out_7430899785832796999);
}
void live_h_32(double *state, double *unused, double *out_8756716565681570076) {
  h_32(state, unused, out_8756716565681570076);
}
void live_H_32(double *state, double *unused, double *out_4647241621414379406) {
  H_32(state, unused, out_4647241621414379406);
}
void live_h_13(double *state, double *unused, double *out_9075639493952822068) {
  h_13(state, unused, out_9075639493952822068);
}
void live_H_13(double *state, double *unused, double *out_6314434707637418687) {
  H_13(state, unused, out_6314434707637418687);
}
void live_h_14(double *state, double *unused, double *out_6579658735120463831) {
  h_14(state, unused, out_6579658735120463831);
}
void live_H_14(double *state, double *unused, double *out_7890371877133737886) {
  H_14(state, unused, out_7890371877133737886);
}
void live_h_33(double *state, double *unused, double *out_4423886799982408917) {
  h_33(state, unused, out_4423886799982408917);
}
void live_H_33(double *state, double *unused, double *out_4280342781193939395) {
  H_33(state, unused, out_4280342781193939395);
}
void live_predict(double *in_x, double *in_P, double *in_Q, double dt) {
  predict(in_x, in_P, in_Q, dt);
}
}

const EKF live = {
  .name = "live",
  .kinds = { 4, 9, 10, 12, 35, 32, 13, 14, 33 },
  .feature_kinds = {  },
  .f_fun = live_f_fun,
  .F_fun = live_F_fun,
  .err_fun = live_err_fun,
  .inv_err_fun = live_inv_err_fun,
  .H_mod_fun = live_H_mod_fun,
  .predict = live_predict,
  .hs = {
    { 4, live_h_4 },
    { 9, live_h_9 },
    { 10, live_h_10 },
    { 12, live_h_12 },
    { 35, live_h_35 },
    { 32, live_h_32 },
    { 13, live_h_13 },
    { 14, live_h_14 },
    { 33, live_h_33 },
  },
  .Hs = {
    { 4, live_H_4 },
    { 9, live_H_9 },
    { 10, live_H_10 },
    { 12, live_H_12 },
    { 35, live_H_35 },
    { 32, live_H_32 },
    { 13, live_H_13 },
    { 14, live_H_14 },
    { 33, live_H_33 },
  },
  .updates = {
    { 4, live_update_4 },
    { 9, live_update_9 },
    { 10, live_update_10 },
    { 12, live_update_12 },
    { 35, live_update_35 },
    { 32, live_update_32 },
    { 13, live_update_13 },
    { 14, live_update_14 },
    { 33, live_update_33 },
  },
  .Hes = {
  },
  .sets = {
  },
  .extra_routines = {
    { "H", live_H },
  },
};

ekf_init(live);
